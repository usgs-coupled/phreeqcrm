name: Build Distro

on:
  push:
  pull_request:
    branches: [ master ]

env:
  NAME: PhreeqcRM
  BUILD_TYPE: Release

jobs:

  init:
    runs-on: ubuntu-latest
    # Map step outputs to job outputs
    outputs:
      VER: ${{ steps.vars.outputs.VER }}
      REL: ${{ steps.vars.outputs.REL }}
      DATE: ${{ steps.vars.outputs.DATE }}
      DATE_RFC_3339: ${{ steps.vars.outputs.DATE_RFC_3339 }}
    steps:
      - name: Setup vars
        id: vars
        run: |
          echo VER=$(curl -sS https://raw.githubusercontent.com/usgs-coupled/phreeqc-version/main/next_ver.sh | sh) >> $GITHUB_OUTPUT
          echo REL=$(curl -sS https://raw.githubusercontent.com/usgs-coupled/phreeqc-version/main/rel.py | python3) >> $GITHUB_OUTPUT
          echo DATE=$(date "+%x")                                                                                   >> $GITHUB_OUTPUT
          echo DATE_RFC_3339=$(date --rfc-3339=date)                                                                >> $GITHUB_OUTPUT

  distcheck:
    name: make distcheck
    needs: init
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: autoreconf
      run: autoreconf -fvi

    - name: versioning
      run: ./jenkins-dist.sh -v ${{ needs.init.outputs.VER }} -r ${{ needs.init.outputs.REL }} -d ${{ needs.init.outputs.DATE }}

    - name: doxygen
      run: sudo apt-get install doxygen && cd Doxygen && make

    - name: mkdir
      run: mkdir ${{github.workspace}}/_build

    - name: configure
      shell: bash
      working-directory: ${{github.workspace}}/_build
      run: ../configure --prefix=$(pwd)/INSTALL

    - name: make
      shell: bash
      working-directory: ${{github.workspace}}/_build
      run: make -j2 distcheck

    - uses: actions/upload-artifact@v3
      with:
        name: tarball
        path: ${{github.workspace}}/_build/*.tar.gz

  cmake-ubuntu:
    name: cmake ubuntu
    needs: distcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: tarball
      
      - name: printenv
        run: printenv
      
      - name: dir
        run: pwd && find .

  cmake-windows:
    name: cmake windows
    needs: distcheck
    runs-on: windows-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: tarball
      
      - name: printenv
        run: Get-ChildItem 'env:'
      
      - name: dir
        run: Get-ChildItem
