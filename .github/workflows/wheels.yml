name: wheels

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - '.github/workflows/ci.yml'
      - '.github/workflows/dist.yml'
      - '.gitignore'
      - 'build-all-presets.sh'
      - 'CMakePresets.json'
  push:
    # branches:
    #   - master
    paths-ignore:
      - '.github/workflows/ci.yml'
      - '.github/workflows/dist.yml'
      - '.gitignore'
      - 'build-all-presets.sh'
      - 'CMakePresets.json'

jobs:
  build_wheels:
    name: ${{ matrix.python[0] }}(${{ matrix.buildplat[2] }}) on ${{ matrix.buildplat[0] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      fail-fast: false
      matrix:
        buildplat:
          - [macos-13, macosx_x86_64, x86_64, x86_64]
          - [macos-14, macosx_arm64, arm64, arm64]
          - [ubuntu-24.04-arm, manylinux_aarch64, aarch64, aarch64]
          - [ubuntu-22.04, manylinux_ppc64le, ppc64le, ppc64le]
          - [ubuntu-22.04, manylinux_x86_64, x86_64, x86_64]
          - [ubuntu-22.04, manylinux_i686, i686, i686]
          - [windows-2022, win_amd64, x64, AMD64]
          - [windows-2022, win32, Win32, x86]
          - [windows-11-arm, win_arm64, ARM64, ARM64]
        python:
          - [cp311, v143]
          - [cp312, v143]
          - [cp313, v143]
          # - [cp313t, v143]
          - [cp314, v143]
          - [pp311, v143]

        exclude:
          # cp313(i686) on ubuntu-22.04
          - buildplat: [ubuntu-22.04, manylinux_i686, i686]
            python: [cp313, v142]
          # pp311(ppc64le) on ubuntu-22.04
          - buildplat: [ubuntu-22.04, manylinux_ppc64le, ppc64le, ppc64le]
            python: [pp311, v143]
          # pp311(i686) on ubuntu-22.04
          - buildplat: [ubuntu-22.04, manylinux_i686, i686, i686]
            python: [pp311, v143]
          # pp311(Win32) on windows-2022
          - buildplat: [windows-2022, win32, Win32, x86]
            python: [pp311, v143]
          # pp311(ARM64) on windows-2022
          - buildplat: [windows-11-arm, win_arm64, ARM64, ARM64]
            python: [pp311, v143]
          # cp313t(ppc64le) on ubuntu-22.04
          - buildplat: [ubuntu-22.04, manylinux_ppc64le, ppc64le, ppc64le]
            python: [cp313t, v142]
          # cp313t(i686) on ubuntu-22.04
          - buildplat: [ubuntu-22.04, manylinux_i686, i686]
            python: [cp313t, v142]
          # cp38(ARM64) on windows-2022
          - buildplat: [windows-2022, win_arm64, ARM64, ARM64]
            python: [cp38, v141]
          # cp313t(ARM64) on windows-2022
          - buildplat: [windows-2022, win_arm64, ARM64, ARM64]
            python: [cp313t, v142]

    steps:
      - uses: actions/checkout@v4

      # Used to host cibuildwheel
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Check python version
        run: |
          python --version

      - name: Set up QEMU
        if: runner.os == 'Linux' && runner.arch == 'X64'
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all          

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel==3.1.4

      - name: Build wheels (Linux)
        if: ${{ runner.os == 'Linux' }}
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENABLE: cpython-prerelease cpython-freethreading pypy
          CIBW_BUILD: ${{ matrix.python[0] }}-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_REQUIRES: pytest
          # CIBW_BEFORE_TEST: pwd && ls -Ral && ls -Ral {project}/swig/python
          CIBW_TEST_COMMAND: "pytest {project}/swig/python"
          CIBW_ARCHS_LINUX: ${{ matrix.buildplat[3] }}

      - name: Build wheels (macOS)
        if: ${{ runner.os == 'macOS' }}
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENABLE: cpython-prerelease cpython-freethreading pypy
          CIBW_BUILD: ${{ matrix.python[0] }}-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_REQUIRES: pytest
          # CIBW_BEFORE_TEST: pwd && ls -Ral && ls -Ral {project}/swig/python
          CIBW_TEST_COMMAND: "pytest {project}/swig/python"
          CIBW_ARCHS_MACOS: ${{ matrix.buildplat[3] }}

      - name: Build wheels (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ENABLE: cpython-prerelease cpython-freethreading pypy
          CIBW_BUILD: ${{ matrix.python[0] }}-*
          CIBW_BUILD_VERBOSITY: 1
          CIBW_TEST_REQUIRES: pytest
          # CIBW_BEFORE_TEST: pwd && ls -Ral && ls -Ral {project}/swig/python
          CIBW_TEST_COMMAND: "pytest {project}/swig/python"
          CIBW_ARCHS_WINDOWS: ${{ matrix.buildplat[3] }}
          CMAKE_GENERATOR: Visual Studio 17 2022
          CMAKE_GENERATOR_TOOLSET: ${{ matrix.python[1] }}
          CMAKE_GENERATOR_PLATFORM: ${{ matrix.buildplat[2] }}      

      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: dist-${{ matrix.python[0] }}-${{ matrix.buildplat[1] }}-${{ github.run_number }}
          path: ./wheelhouse/*.whl


  build_sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@39cd14951b08e74b54015e9e001cdefcf80e669f # v5.1.1
        with:
          # Build sdist on lowest supported Python
          python-version: "3.11"
      - name: Build sdist
        run: |
          python -m pip install -U pip build
          python -m build --sdist

      - uses: actions/upload-artifact@0b2256b8c012f0828dc542b3febcab082c67f72b # v4.3.4
        with:
          name: dist-sdist
          path: ./dist/*


  merge_wheels:
    name: Merge wheels into a combined artifact
    runs-on: ubuntu-latest
    needs: [build_wheels, build_sdist]
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: dist-${{ github.run_number }}
          pattern: dist-*
